scalar Void

type Book {
  id: ID!
  title: String!
  author: String!
  isbn: String!
  category: String
  status: String
  price: Float
  inventory: Int
  notes: String
}

input CreateBookInput {
  id: ID!
  title: String!
  author: String!
  isbn: String!
  category: String
  status: String
  price: Float
  inventory: Int
  notes: String
}

input UpdateBookInput {
  id: ID!
  title: String
  author: String
  isbn: String
  category: String
  status: String
  price: Float
  inventory: Int
  notes: String
}

input AdjustInventoryInput {
  id: ID!
  inventory: Int
}

type Query {
  books: [Book]!
  book(id: ID!): Book
}

type Mutation {
  createBook(createBookInput: CreateBookInput!): Void
  updateBook(updateBookInput: UpdateBookInput!): Void
  adjustInventory(adjustInventoryInput: AdjustInventoryInput!): Void
  removeBook(id: ID!): Void
}
